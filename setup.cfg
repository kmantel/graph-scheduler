[bdist_wheel]
python-tag = py3

[metadata]
license_file = LICENSE.txt

[tool:pytest]
addopts =
    -s
    -vv
    -n auto
    --benchmark-disable
    --benchmark-disable-gc
    --benchmark-warmup=on
    --benchmark-warmup-iterations=2
    --cov-config setup.cfg
    --docstyle
    --codestyle

markers =
	stress: Long running tests, skipped by defaults
	acconstructor
	acmisc
	accorrectness
	actime
	acidenticalness
	aclogging
	acnested
	composition: PsyNeuLink Composition tests
	llvm: Tests using LLVM runtime compiler
	cuda: Tests using LLVM runtime compiler and CUDA GPGPU backend
	control: Tests including control mechanism
	projection
	nested: Tests including nested compositions
	function: Tests of Function classes
	combination_function
	distance_function
	fitzHughNagumo_integrator_function
	identity_function
	integrator_function
	memory_function
	optimization_function
	stability_function
	transfer_function
	multirun: Tests running multiple execution IDs
	mechanism: Tests of Mechanism classes
	control_mechanism
	integrator_mechanism
	objective_mechanism
	recurrent_transfer_mechanism
	transfer_mechanism
	mimo: Tests using multiple inputs and outputs
	model: Tests based on existing models
	pytorch: Tests using Torch

pytest_plugins = ['pytest_profiling', 'helpers_namespace', 'benchmark']

xfail_strict = True

# for code explanation see https://pep8.readthedocs.io/en/latest/intro.html#error-codes
codestyle_ignore = E101 E111 E114 E115 E116 E117 E121 E122 E123 E124 E125 E126 E127 E128 E129 E131 E201 E202 E203 E211 E221 E222 E225 E226 E227 E228 E231 E241 E251 E252 E261 E262 E265 E266 E271 E301 E302 E303 E304 E305 E306 E402 E501 E502 E701 E703 E711 E712 E713 E714 E721 E722 E731 E741 W191 W291 W292 W293 W391 W503 W504 W605

# for code explanation see http://www.pydocstyle.org/en/latest/error_codes.html
docstyle_add_ignore = D100 D101 D102 D103 D104 D105 D106 D107 D200 D202 D204 D205 D207 D208 D301 D400 D401 D402 D403 D412 D413 D414
docstyle_exclude = __init__.py

[coverage:run]
branch = True
concurrency = multiprocess
source = psyneulink/

[coverage:report]
fail_under = 70

# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    if .* in debug_env:
    if .* in self.__debug_env:

    # Don't complain if tests don't hit defensive assertion code:
    raise .*Error
    assert False.*

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

# Omit models that are not tested
omit = psyneulink/library/models/*

[versioneer]
VCS = git
style = pep440
versionfile_source = psyneulink/_version.py
versionfile_build = psyneulink/_version.py
tag_prefix = v
parentdir_prefix = psyneulink-
