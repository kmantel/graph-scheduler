name: Docs CI Deploy

on:
  workflow_run:
    workflows: ["Docs CI Build"]
    types:
      - completed

jobs:
  docs-deploy:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    needs: [docs-build]
    if: ${{ github.event.workflow_run.conclusion == 'success' }} &&
        (github.ref == 'refs/heads/main' ||
         (startsWith(github.ref, 'refs/tags/') && contains(needs.*.outputs.on_main, 'main'))
        )

    steps:
    - name: Checkout docs
      uses: actions/checkout@v2.3.5
      with:
        ref: gh-pages

    - name: Fetch tags
      run: git fetch origin +refs/tags/*:refs/tags/*

    - name: Download branch docs
      uses: actions/download-artifact@v2
      with:
        name: Documentation-${{ matrix.os }}-${{ matrix.python-version }}-x64
        path: _built_docs/${{ github.ref }}
      if: github.ref == 'refs/heads/main'

    - name: Update branch docs
      shell: bash
      run: |
        mkdir -p branch
        rm -rf "branch/${GITHUB_REF##*/}"
        mv -f "_built_docs/${GITHUB_REF}" branch/
      if: github.ref == 'refs/heads/main'

    - name: Download main docs
      uses: actions/download-artifact@v2
      with:
        name: Documentation-${{ matrix.os }}-${{ matrix.python-version }}-x64
        path: _built_docs/${{ github.ref }}
      if: startsWith(github.ref, 'refs/tags/') && contains(needs.*.outputs.on_main, 'main')

    - name: Update main docs
      shell: bash
      run: |
        mkdir -p tag
        # Save docs to tags dir for this tag
        tag_name=$(echo "${GITHUB_REF}" | sed -r 's;refs/tags/(.*?)$;\1;')
        cp -r "_built_docs/${GITHUB_REF}/" "tag/$tag_name/"
        # don't update main docs if tag is old
        if [ $(git tag --contains "$tag_name" | wc -l) -lt 2 ]; then
          cp -r "_built_docs/${GITHUB_REF}/"* ./
        fi
        rm -rf "_built_docs/"

      if: startsWith(github.ref, 'refs/tags/') && contains(needs.*.outputs.on_main, 'main')

    - name: Commit documentation changes
      run: |
        git add .
        git config --local user.name "Documentation Bot"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git commit -m "Docs changes for $GITHUB_REF $GITHUB_SHA" || true
        git push
