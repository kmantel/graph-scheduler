name: PsyNeuLink CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
          # python 3.8 on windows fails to build GPy
          - os: windows-latest
            python-version: 3.8

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 10

    - name: Linux wheels cache
      uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip/wheels
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-wheels

    - name: MacOS wheels cache
      uses: actions/cache@v1
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip/wheels
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-wheels

    - name: Windows wheels cache
      uses: actions/cache@v1
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache\wheels
        key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-wheels

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: MacOS dependencies
      run: HOMEBREW_NO_AUTO_UPDATE=1 brew install graphviz
      if: startsWith(runner.os, 'macOS')

    - name: Linux dependencies
      run: sudo apt-get install -y graphviz
      if: startsWith(runner.os, 'Linux')

    - name: Windows dependencies
      run: |
        choco install --no-progress -y graphviz
        python -m pip install --upgrade pip
        pip install torch -f https://download.pytorch.org/whl/cpu/torch_stable.html
      if: startsWith(runner.os, 'Windows')

    - name: Shared dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip wheel
        pip install -e .[dev]
        pip install --user git+https://github.com/benureau/leabra.git@master

    - name: Lint with flake8
      shell: bash
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: pytest --junit-xml=tests_out.xml

    - name: Upload test results
      uses: actions/upload-artifact@v1
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: tests_out.xml
      if: success() || failure()

    - name: Build dist
      run: |
        pip install setuptools wheel
        python setup.py sdist bdist_wheel
      if: contains(github.ref, 'tags')
    - name: Upload dist packages
      uses: actions/upload-artifact@v1
      with:
        name: dist-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/
      if: contains(github.ref, 'tags')
